const NguoiDungService = require('../../services/NguoiDungService');

class NguoiDungController {
  // ƒêƒÉng k√Ω
  async dangKy(req, res) {
    try {
      const { email, matkhau } = req.body;
      if (!email || !matkhau) {
        return res.status(400).json({
          thanhcong: false,
          thongbao: "Email v√† m·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc",
        });
      }

      const nguoidung = await NguoiDungService.dangKy(req.body);
      res.status(201).json({
        thanhcong: true,
        thongbao: "ƒêƒÉng k√Ω th√†nh c√¥ng",
        duLieu: nguoidung,
      });
    } catch (err) {
      res.status(400).json({
        thanhcong: false,
        thongbao: err.message || "ƒêƒÉng k√Ω th·∫•t b·∫°i",
      });
    }
  }

  // ƒêƒÉng nh·∫≠p
  async dangNhap(req, res) {
    try {
      const { email, matkhau } = req.body;
      if (!email || !matkhau) {
        return res.status(400).json({
          thanhcong: false,
          thongbao: "Email v√† m·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc",
        });
      }

   const ketqua = await NguoiDungService.dangNhap({ email, matkhau });
      res.status(200).json({
        thanhcong: true,
        thongbao: ketqua.thongbao,
        duLieu: ketqua.nguoidung,
        token: ketqua.token // üëâ g·ª≠i token v·ªÅ cho client
      });
    } catch (err) {
      res.status(401).json({
        thanhcong: false,
        thongbao: err.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i",
      });
    }
  }

  // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
  async layNguoiDung(req, res) {
    try {
      const { id } = req.params;
      const nguoidung = await NguoiDungService.layNguoiDungTheoId(id);
      res.status(200).json({
        thanhcong: true,
        duLieu: nguoidung,
      });
    } catch (err) {
      res.status(404).json({
        thanhcong: false,
        thongbao: err.message || "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng",
      });
    }
  }

  // C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
  async capNhatThongTin(req, res) {
    try {
      const { id } = req.params;
      const thanhcong = await NguoiDungService.capNhatThongTin(id, req.body);
      res.status(200).json({
        thanhcong: true,
        thongbao: "C·∫≠p nh·∫≠t th√†nh c√¥ng",
      });
    } catch (err) {
      res.status(400).json({
        thanhcong: false,
        thongbao: err.message || "C·∫≠p nh·∫≠t th·∫•t b·∫°i",
      });
    }
  }

  // ƒê·ªïi m·∫≠t kh·∫©u
  async doiMatKhau(req, res) {
    try {
      const { mataikhoan, matkhauCu, matkhauMoi } = req.body;

      if (!mataikhoan || !matkhauCu || !matkhauMoi) {
        return res.status(400).json({
          thanhcong: false,
          thongbao: "Thi·∫øu th√¥ng tin ƒë·ªïi m·∫≠t kh·∫©u",
        });
      }

      const kq = await NguoiDungService.doiMatKhau(mataikhoan, matkhauCu, matkhauMoi);
      res.status(200).json({
        thanhcong: true,
        thongbao: kq.thongbao,
      });
    } catch (err) {
      res.status(400).json({
        thanhcong: false,
        thongbao: err.message || "ƒê·ªïi m·∫≠t kh·∫©u th·∫•t b·∫°i",
      });
    }
  }

  // X√≥a ng∆∞·ªùi d√πng
  async xoaNguoiDung(req, res) {
    try {
      const { id } = req.params;
      const ketqua = await NguoiDungService.xoaNguoiDung(id);
      res.status(200).json({
        thanhcong: true,
        thongbao: ketqua.thongbao,
      });
    } catch (err) {
      res.status(400).json({
        thanhcong: false,
        thongbao: err.message || "X√≥a th·∫•t b·∫°i",
      });
    }
  }

    // L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng
  async layTatCaNguoiDung(req, res) {
    try {
      const danhSach = await NguoiDungService.layTatCaNguoiDung();
      res.status(200).json({
        thanhcong: true,
        duLieu: danhSach,
      });
    } catch (err) {
      res.status(500).json({
        thanhcong: false,
        thongbao: err.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch ng∆∞·ªùi d√πng",
      });
    }
  }

}





module.exports = new NguoiDungController;
